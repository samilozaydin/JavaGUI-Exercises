/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab7;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bilal
 */
public class frm_quest1 extends javax.swing.JFrame {

    DefaultTableModel tbl_informationModel;
    int id;

    public frm_quest1() {
        initComponents();
        tbl_informationModel = new DefaultTableModel();
        tbl_informationModel.setColumnIdentifiers(new Object[]{"ID", "NAME", "EMAIL", "PASSWORD", "ADDRESS", "ISSMOKER", "POSITION"});
        getList();
        tbl_informations.setModel(tbl_informationModel);
        id = tbl_informations.getRowCount() + 1;
    }

    public boolean getList() {
        tbl_informationModel.setRowCount(0);
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/COMPANY", "sa", "as");
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM TBL_PERSONAL ORDER BY ID ASC";
            ResultSet rst = stmt.executeQuery(query);
            while (rst.next()) {
                int id = rst.getInt("ID");
                String name = rst.getString("NAME");
                String email = rst.getString("EMAIL");
                String password = rst.getString("PASSWORD");
                String address = rst.getString("ADDRESS");
                boolean issmoker = rst.getBoolean("ISSMOKER");
                String position = rst.getString("POSITION");
                tbl_informationModel.addRow(new Object[]{id, name, email, password, address, issmoker, position});
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !conn.isClosed()) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    public boolean Reading(int id) {
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/COMPANY", "sa", "as");
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM TBL_PERSONAL WHERE ID=" + id;
            ResultSet rst = stmt.executeQuery(query);
            while (rst.next()) {
                int id2 = rst.getInt("ID");
                String name = rst.getString("NAME");
                String email = rst.getString("EMAIL");
                String password = rst.getString("PASSWORD");
                String address = rst.getString("ADDRESS");
                boolean issmoker = rst.getBoolean("ISSMOKER");
                String position = rst.getString("POSITION");

                this.txt_address.setText(address);
                this.txt_email.setText(email);
                this.txt_id.setText(Integer.toString(id2));
                this.txt_name.setText(name);
                this.txt_password.setText(password);
                this.chbox_ıssmoker.setSelected(issmoker);

            }
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !conn.isClosed()) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_informations = new javax.swing.JTable();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        lbl_id = new javax.swing.JLabel();
        lbl_nae = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        lbl_address = new javax.swing.JLabel();
        chbox_ıssmoker = new javax.swing.JCheckBox();
        lbl_pasition = new javax.swing.JLabel();
        cbox_position = new javax.swing.JComboBox<>();
        btn_add = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        txt_address = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_informations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_informations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbl_informationsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_informations);

        btn_search.setText("SEARCH");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        lbl_id.setText("ID:");

        lbl_nae.setText("NAME:");

        lbl_email.setText("EMAIL:");

        lbl_password.setText("PASSWORD:");

        lbl_address.setText("ADDRESS");

        chbox_ıssmoker.setText("ISS SMOKER");

        lbl_pasition.setText("POSITION:");

        cbox_position.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mudur", "Muhasebe", "Muhendis", "Hademe", "Guvenlik" }));

        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_update.setText("UPDATE");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setText("DELETE");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        txt_id.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_address)
                            .addComponent(lbl_pasition)
                            .addComponent(lbl_password)
                            .addComponent(lbl_nae)
                            .addComponent(lbl_email)
                            .addComponent(lbl_id))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbox_position, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 14, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chbox_ıssmoker)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_password)
                                        .addComponent(txt_email)
                                        .addComponent(txt_name)
                                        .addComponent(txt_id)
                                        .addComponent(txt_address, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))))))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_search)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_id))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_nae))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_email))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_password))
                                .addGap(27, 27, 27)
                                .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(chbox_ıssmoker)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbox_position, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_pasition)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_address)
                        .addGap(94, 94, 94)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_update)
                    .addComponent(btn_delete))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_informationsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_informationsMousePressed
        if (SwingUtilities.isLeftMouseButton(evt) && evt.getClickCount() == 2) {
            int row = tbl_informations.getSelectedRow();
            int id = (int) tbl_informationModel.getValueAt(row, 0);
            Reading(id);
        }
    }//GEN-LAST:event_tbl_informationsMousePressed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/COMPANY", "sa", "as");
            Statement stmt = conn.createStatement();
            String query = "SELECT EMAIL FROM TBL_PERSONAL WHERE EMAIL= '" + txt_email.getText() + "'";
            ResultSet rst = stmt.executeQuery(query);
            if (rst.next()) {
                JOptionPane.showMessageDialog(rootPane, "Bu kullanilmis");
                return;
            }
//            while (rst.next()) {
//                String email = rst.getString("EMAIL");
//                if (txt_email.equals(email)) {
//                    JOptionPane.showMessageDialog(rootPane, "Bu kullanilmis");
//                    return;
//                }
//            }
            query = "INSERT INTO TBL_PERSONAL VALUES (" + id + ",'" + this.txt_name.getText() + "','" + this.txt_email.getText() + "','" + this.txt_password.getText() + "','" + this.txt_address.getText() + "','" + this.chbox_ıssmoker.isSelected() + "','" + (String) this.cbox_position.getSelectedItem() + "')";
            id++;

            stmt.executeUpdate(query);
            getList();
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !conn.isClosed()) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed

        String text = txt_search.getText();
        DefaultTableModel x = tbl_informationModel;

        tbl_informationModel.setRowCount(0);

        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/COMPANY", "sa", "as");
            Statement stmt = conn.createStatement();
            String query = "INSERT INTO TBL_PERSONAL VALUES (" + id + ",'" + this.txt_name.getText() + "','" + this.txt_email.getText() + "','" + this.txt_password.getText() + "','" + this.txt_address.getText() + "','" + this.chbox_ıssmoker.isSelected() + "','" + (String) this.cbox_position.getSelectedItem() + "')";

            ResultSet rst = stmt.executeQuery(query);
            while (rst.next()) {
                if (rst.getString(2).contains(text) || rst.getString(3).contains(text) || rst.getString(7).contains(text)) {

                    tbl_informationModel.addRow(new Object[]{x.getValueAt(rst.getRow(), 1), x.getValueAt(rst.getRow(), 2), x.getValueAt(rst.getRow(), 3), x.getValueAt(rst.getRow(), 4), x.getValueAt(rst.getRow(), 5), x.getValueAt(rst.getRow(), 6), x.getValueAt(rst.getRow(), 7)});

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !conn.isClosed()) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btn_searchActionPerformed
    public boolean Delete(int id) {
        Connection con = null;

        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/COMPANY", "sa", "as");
            Statement stmt = con.createStatement();
            String query = "DELETE FROM TBL_PERSONAL WHERE ID=" + id;
            stmt.executeUpdate(query);
            getList();
            con.close();
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (con != null && !con.isClosed()) {
                con.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        int row = tbl_informations.getSelectedRow();
        int id = (int) tbl_informations.getValueAt(row, 0);
        Delete(id);
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        int row = tbl_informations.getSelectedRow();
        int id = (int) tbl_informations.getValueAt(row, 0);
        update(id);
    }//GEN-LAST:event_btn_updateActionPerformed
    public boolean update(int id) {
        Connection con = null;

        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/COMPANY", "sa", "as");
            Statement stmt = con.createStatement();
            String query = "UPDATE TBL_PERSONAL SET NAME = '" + txt_name.getText() + "' WHERE ID = " + id + "";
            stmt.executeUpdate(query);

            query = "UPDATE TBL_PERSONAL SET EMAIL = '" + txt_email.getText() + "' WHERE ID = " + id + "";
            stmt.executeUpdate(query);
            query = "UPDATE TBL_PERSONAL SET ADDRESS = '" + txt_address.getText() + "' WHERE ID = " + id + "";
            stmt.executeUpdate(query);
            query = "UPDATE TBL_PERSONAL SET PASSWORD = '" + txt_password.getText() + "' WHERE ID = " + id + "";
            stmt.executeUpdate(query);
            query = "UPDATE TBL_PERSONAL SET ISSMOKER = " + chbox_ıssmoker.isSelected() + " WHERE ID = " + id + "";
            stmt.executeUpdate(query);
            query = "UPDATE TBL_PERSONAL SET POSITION = '" + (String) cbox_position.getSelectedItem() + "' WHERE ID = " + id + "";
            stmt.executeUpdate(query);

            getList();
            con.close();
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (con != null && !con.isClosed()) {
                con.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_quest1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_quest1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_quest1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_quest1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_quest1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_quest1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cbox_position;
    private javax.swing.JCheckBox chbox_ıssmoker;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_nae;
    private javax.swing.JLabel lbl_pasition;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JTable tbl_informations;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
